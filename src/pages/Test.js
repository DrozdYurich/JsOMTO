let testQuestions = []; // –ú–∞—Å—Å–∏–≤ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞

export default function Test() {
  const testContainer = document.createElement("div");
  testContainer.className = "test-container";

  let currentQuestion = 0;
  let answers = [];

  // üîÅ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
  async function loadQuestionsFromServer() {
    try {
      const response = await fetch(
        "https://your-api-url.com/api/test/questions"
      );

      if (!response.ok) {
        throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–æ–ø—Ä–æ—Å–æ–≤");
      }

      const result = await response.json(); // –û–∂–∏–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ API
      testQuestions = result.slice(0, 10); // –ë–µ—Ä—ë–º –¥–æ 10 –≤–æ–ø—Ä–æ—Å–æ–≤
      renderQuestion(); // –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", error);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Å —Å–µ—Ä–≤–µ—Ä–∞");
    }
  }

  function renderQuestion() {
    if (currentQuestion >= testQuestions.length) {
      testContainer.innerHTML = `
        <div class="test-complete">
          <h2>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!</h2>
          <p>–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ ${
            answers.filter((a) => a.isCorrect).length
          } –∏–∑ ${testQuestions.length} –≤–æ–ø—Ä–æ—Å–æ–≤.</p>
          
        </div>
      `;

      testContainer.querySelector("#restartBtn");

      return;
    }

    const question = testQuestions[currentQuestion];

    testContainer.innerHTML = `
      <div class="question-container">
        <div class="progress">–í–æ–ø—Ä–æ—Å ${currentQuestion + 1} –∏–∑ ${
      testQuestions.length
    }</div>
        <h2 class="question-text">${question.text}</h2>

        <div class="options">
          ${question.answers
            .map(
              (answer, i) => `
                <div class="option">
                  <input type="radio" id="option-${i}" name="answer" value="${answer.text}">
                  <label for="option-${i}">${answer.text}</label>
                </div>
              `
            )
            .join("")}
        </div>

        <button id="submitAnswer" class="btn btn-primary">–û—Ç–≤–µ—Ç–∏—Ç—å</button>
      </div>
    `;

    testContainer
      .querySelector("#submitAnswer")
      .addEventListener("click", () => {
        const selectedOption = testContainer.querySelector(
          'input[name="answer"]:checked'
        );
        if (!selectedOption) {
          alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞");
          return;
        }

        const answerText = selectedOption.value;
        const correctAnswer =
          question.answers.find((a) => a.is_correct)?.text || null;

        const isCorrect = answerText === correctAnswer;

        answers.push({
          questionId: question.id,
          answer: answerText,
          isCorrect: isCorrect,
        });

        currentQuestion++;
        renderQuestion();
      });
  }

  // üí° –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–∞
  loadQuestionsFromServer();

  return testContainer;
}
